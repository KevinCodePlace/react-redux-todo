{"version":3,"sources":["redux/actionTypes.js","redux/actions.js","component/TodoInput.js","component/TodoItem.js","component/TodoList.js","component/TodoFilter.js","App.js","redux/reducers/todosReducer.js","redux/reducers/filterReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","DELETE_TODO","DELETEAll_TODO","FILTER_TODO","toggleTodo","id","type","payload","todoFilter","filter","NewTodoInput","styled","input","ClearAllButton","button","TodoInput","useState","inputValue","setInputValue","dispatch","useDispatch","placeholder","value","onChange","e","target","onKeyDown","event","which","content","onClick","TodoList","div","TodoCheck","EachTodoItem","TodoDelete","TodoItem","todo","isDone","deleteTodo","todos","useSelector","state","todoState","filterState","afterFilterTodos","map","Filters","Filter","FilterBackground","active","TodoFilter","Container","Title","app","nextID","initialState","todosReducer","action","filterReducer","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","App","document","getElementById"],"mappings":"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","file":"static/js/main.f9e02eda.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const DELETEAll_TODO = 'DELETEAll_TODO';\r\nexport const FILTER_TODO = 'FILTER_TODO';\r\n","import { ADD_TODO, TOGGLE_TODO, DELETE_TODO, DELETEAll_TODO, FILTER_TODO} from './actionTypes';\r\n\r\nexport const addTodo = content => {\r\n    return {\r\n        type:ADD_TODO,\r\n        payload: {\r\n            content\r\n        },\r\n    };\r\n}\r\n\r\nexport const toggleTodo = id => {\r\n    return {\r\n        type:TOGGLE_TODO,\r\n        payload: {\r\n            id\r\n        },\r\n    };\r\n}\r\n\r\nexport const deleteTodo = id => {\r\n    return {\r\n        type:DELETE_TODO,\r\n        payload: {\r\n            id\r\n        },\r\n    };\r\n}\r\n\r\nexport const deleteAllTodo = () => {\r\n    return {\r\n        type:DELETEAll_TODO,\r\n    };\r\n}\r\n\r\nexport const todoFilter = (filter) => {\r\n    return {\r\n        type:FILTER_TODO,\r\n        payload : {\r\n            filter\r\n        },\r\n    };\r\n}\r\n","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTodo, deleteAllTodo } from '../redux/actions';\r\n\r\nconst NewTodoInput = styled.input`\r\n    width: 400px;\r\n    height: 30px;\r\n    margin-top:30px\r\n`;\r\n\r\nconst ClearAllButton = styled.button`\r\n    height: 35px;\r\n    margin-left: 20px;\r\n`;\r\n\r\n\r\nconst TodoInput = () => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const handleKeyDown = (event) => {\r\n        if(event.which === 13) {\r\n            dispatch(addTodo(inputValue));\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n           <NewTodoInput type='text' placeholder='請輸入待辦事項...（Enter）' \r\n                value={inputValue}\r\n                onChange={e => setInputValue(e.target.value)}\r\n                onKeyDown={handleKeyDown}></NewTodoInput> \r\n           <ClearAllButton onClick={() => dispatch(deleteAllTodo())}>一鍵清空</ClearAllButton>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoInput;","import { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { toggleTodo, deleteTodo } from '../redux/actions';\r\n\r\nconst TodoList = styled.div`\r\n  display: flex;\r\n  margin: 10px 0px;\r\n  padding: 10px;\r\n  border: 1px solid rgba(192,192, 192, 0.6) ;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst TodoCheck = styled.div`\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst EachTodoItem = styled.div`\r\n    flex:1;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TodoDelete = styled.div`\r\n    cursor: pointer;\r\n    padding: 5px;\r\n    color: black;\r\n    background-color: transparent;\r\n\r\n    &:hover {\r\n        color: white;\r\n        background-color: red;\r\n    }\r\n`;\r\n\r\nconst TodoItem = ({todo, id, isDone}) => {\r\n    const dispatch = useDispatch();\r\n    return(\r\n        <div>\r\n            <TodoList>\r\n                <TodoCheck onClick={() => dispatch(toggleTodo(id))}>{isDone ? '☑' : '☐'}</TodoCheck>\r\n                <EachTodoItem\r\n                    onClick={() => dispatch(toggleTodo(id))}>{todo}\r\n                </EachTodoItem>\r\n                <TodoDelete onClick={() => dispatch(deleteTodo(id))}>X</TodoDelete>\r\n            </TodoList>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem;","import { useSelector } from 'react-redux';\r\nimport TodoItem from './TodoItem';\r\n\r\n\r\nconst TodoList = () => {\r\n    const todos = useSelector(state => state.todoState.todos);\r\n    const filter = useSelector( state => state.filterState);\r\n\r\n    const afterFilterTodos = todos.filter((todo) => {\r\n      switch (filter) {\r\n        case 'ALL':\r\n          return todo;\r\n  \r\n        case 'COMPLETED':\r\n          return todo.isDone === true;\r\n  \r\n        case 'UNCOMPLETED':\r\n          return todo.isDone === false;\r\n  \r\n        default:\r\n          return todo;\r\n      }\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            {afterFilterTodos.map((todo) => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo.content}\r\n            id={todo.id}\r\n            isDone={todo.isDone}\r\n          />\r\n        ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import { todoFilter } from \"../redux/actions\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nconst Filters = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst Filter = styled.div`\r\n    margin: 10px;\r\n    padding:5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst FilterBackground = styled.div`\r\n    border: 1px solid gray;\r\n\r\n    ${({ active }) => active && `\r\n        background: greenyellow;\r\n    `}\r\n`;\r\n\r\nconst TodoFilter = () => {\r\n    let filter = useSelector(state => state.filterState);\r\n    const dispatch = useDispatch();\r\n    return(\r\n        <div>\r\n            <Filters>\r\n                <Filter>選擇狀態：</Filter>\r\n                <Filter><FilterBackground active={filter === 'ALL'} onClick={() => dispatch(todoFilter('ALL'))}>全選</FilterBackground></Filter>\r\n                <Filter><FilterBackground active={filter === 'COMPLETED'} onClick={() => dispatch(todoFilter('COMPLETED'))}>已完成</FilterBackground></Filter>\r\n                <Filter><FilterBackground active={filter === 'UNCOMPLETED'} onClick={() => dispatch(todoFilter('UNCOMPLETED'))}>未完成</FilterBackground></Filter>\r\n            </Filters>\r\n        </div>     \r\n    );\r\n}\r\n\r\nexport default TodoFilter;","import styled from 'styled-components';\r\nimport TodoInput from './component/TodoInput';\r\nimport TodoList from './component/TodoList';\r\nimport TodoFilter from './component/TodoFilter';\r\n\r\nconst Container = styled.div`\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n\r\n  width: 500px;\r\n  margin: 10px auto;\r\n  font-size: 14px;\r\n  background-color: #fff;\r\n  border: 1px solid #f1f1f1;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  text-align: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst app = () => {\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Title>Redux Hooks Todo List</Title>\r\n        <TodoInput/>\r\n        <TodoList/>\r\n        <TodoFilter/>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default app;","import { ADD_TODO, TOGGLE_TODO, DELETE_TODO, DELETEAll_TODO} from '../actionTypes';\r\n\r\nlet nextID = 0;\r\n\r\nconst initialState = {\r\n    todos:[]\r\n};\r\n\r\nconst todosReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_TODO: {\r\n            return {\r\n              ...state,\r\n              todos: [\r\n                {\r\n                  id: ++nextID,\r\n                  content: action.payload.content,\r\n                  isDone: false,\r\n                },\r\n                ...state.todos,\r\n              ],\r\n            };\r\n        }\r\n\r\n        case DELETE_TODO: {\r\n            return {\r\n              ...state,\r\n              todos: state.todos.filter((todo) => todo.id !== action.payload.id),\r\n            };\r\n        }\r\n        \r\n        case TOGGLE_TODO : {\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map((todo) => {\r\n                    if(todo.id !== action.payload.id) return todo;\r\n                    return {\r\n                        ...todo,\r\n                        isDone: !todo.isDone,\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        case DELETEAll_TODO : {\r\n            nextID = 0;\r\n            return {\r\n                ...state,\r\n                todos: [],\r\n            };\r\n        }\r\n\r\n        default : {\r\n            return state;\r\n        }\r\n    }   \r\n}\r\nexport default todosReducer","import { FILTER_TODO } from '../actionTypes';\r\n\r\nconst initialState = 'ALL';\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FILTER_TODO: {\r\n            return action.payload.filter;\r\n        }\r\n        \r\n        default: {\r\n            return state;\r\n        }\r\n    }    \r\n}\r\n\r\nexport default filterReducer;","import { combineReducers } from 'redux';\r\nimport todosReducer from './todosReducer';\r\nimport filterReducer from './filterReducer';\r\n\r\nexport default combineReducers({\r\n  todoState: todosReducer,\r\n  filterState: filterReducer,\r\n});\r\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers/index';\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}